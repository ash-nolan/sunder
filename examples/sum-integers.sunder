# Sum integers from standard input an end-of-file condition is reached.
import "std";

func main() void {
    var reader = std::input();
    var allocator = std::general_allocator::init();
    defer {
        allocator.fini();
    }
    var allocator = std::allocator::init[[typeof(allocator)]](&allocator);

    var sum = std::bigint::init(allocator);
    defer {
        sum.fini();
    }

    for true {
        var result = std::read_line(std::input(), allocator);
        if result.is_error() {
            std::print_line(std::err(), result.error());
            std::exit(std::EXIT_FAILURE);
        }

        var line = result.value();
        if line.is_empty() {
            break;
        }
        defer {
            std::slice[[byte]]::delete(allocator, line.value());
        }

        var result = std::bigint::init_from_str(allocator, line.value(), 0);
        if result.is_error() {
            std::print_line(std::err(), result.error());
            std::exit(std::EXIT_FAILURE);
        }

        var value = result.value();
        defer {
            value.fini();
        }

        std::bigint::add(&sum, &sum, &value);
    }

    std::print_format_line(std::out(), "{}", (:[]std::formatter)[std::formatter::init[[std::bigint]](&sum)]);
}
