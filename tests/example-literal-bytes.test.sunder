import "std";

const hello: []byte = "Hello, world!\n";
const nul: []byte = ">\0<\n";
const ht: []byte = ">\t<\n";
const nl: []byte = ">\n<\n";
const squote: []byte = ">\'<\n";
const dquote: []byte = ">\"<\n";
const bslash: []byte = ">\\<\n";

func main() void {
    std::print(std::out(), hello);

    # A NUL byte \0 embedded in this source file as part of the expected output
    # would create an invalid source encoding. Skip testing the NUL byte and
    # assume that the global `nul` constant produced the correct bytes literal.
    std::print(std::out(), ht);
    std::print(std::out(), nl);
    std::print(std::out(), squote);
    std::print(std::out(), dquote);
    std::print(std::out(), bslash);

    std::print(std::out(), "foobar\n"[3u:7u]);

    var b: []byte = "lorem ipsum dolor sit amet";
    var c: []byte = "consectetur adipiscing elit";
    std::assert(b[1u] == c[1u]); # o
}
################################################################################
# Hello, world!
# >	<
# >
# <
# >'<
# >"<
# >\<
# bar
