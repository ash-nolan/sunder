import "std/big_integer.sunder";
import "std/core.sunder";
import "std/general_allocator.sunder";

func main() void {
    var allocator = std::general_allocator::init();
    defer { allocator.fini(); }
    var allocator = std::allocator::init[[typeof(allocator)]](&allocator);

    std::print_format_line(
        std::out(),
        "{}",
        (:[]std::formatter)[
            std::formatter::init[[std::big_integer]](&std::big_integer::ZERO)]);
    std::print_format_line(
        std::out(),
        "{}",
        (:[]std::formatter)[
            std::formatter::init[[std::big_integer]](&std::big_integer::POSITIVE_ONE)]);
    std::print_format_line(
        std::out(),
        "{}",
        (:[]std::formatter)[
            std::formatter::init[[std::big_integer]](&std::big_integer::NEGATIVE_ONE)]);
    std::print_format_line(
        std::out(),
        "{}",
        (:[]std::formatter)[
            std::formatter::init[[std::big_integer]](&std::big_integer::POSITIVE_TWO)]);
    std::print_format_line(
        std::out(),
        "{}",
        (:[]std::formatter)[
            std::formatter::init[[std::big_integer]](&std::big_integer::NEGATIVE_TWO)]);
}
################################################################################
# 0
# 1
# -1
# 2
# -2
