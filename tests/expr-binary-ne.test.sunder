import "std";
import "sys";

func foo() ssize {
    return +123s;
}

func bar() ssize {
    return -123s;
}

func main() void {
    const t_ne_t: bool = true != true;
    const f_ne_f: bool = false != false;
    const t_ne_f: bool = true != false;
    const f_ne_t: bool = false != true;
    sys::dump[[bool]](t_ne_t);
    sys::dump[[bool]](f_ne_f);
    sys::dump[[bool]](t_ne_f);
    sys::dump[[bool]](f_ne_t);
    sys::dump[[bool]](true != true);
    sys::dump[[bool]](false != false);
    sys::dump[[bool]](true != false);
    sys::dump[[bool]](false != true);

    std::print(std::err(), "\n");

    const a: ssize = 123s;
    const b: ssize = 456s;
    const c: ssize = a;
    const a_ne_a: bool = a != a;
    const b_ne_b: bool = b != b;
    const a_ne_b: bool = a != b;
    const b_ne_a: bool = b != a;
    const a_ne_c: bool = a != c;
    const b_ne_c: bool = b != c;
    sys::dump[[bool]](a_ne_a);
    sys::dump[[bool]](b_ne_b);
    sys::dump[[bool]](a_ne_b);
    sys::dump[[bool]](b_ne_a);
    sys::dump[[bool]](a_ne_c);
    sys::dump[[bool]](b_ne_c);

    std::print(std::err(), "\n");

    const foo_ne_foo: bool = foo != foo;
    const bar_ne_bar: bool = bar != bar;
    const foo_ne_bar: bool = foo != bar;
    const bar_ne_foo: bool = bar != foo;
    sys::dump[[bool]](foo_ne_foo);
    sys::dump[[bool]](bar_ne_bar);
    sys::dump[[bool]](foo_ne_bar);
    sys::dump[[bool]](bar_ne_foo);
    sys::dump[[bool]](foo != foo);
    sys::dump[[bool]](bar != bar);
    sys::dump[[bool]](foo != bar);
    sys::dump[[bool]](bar != foo);

    std::print(std::err(), "\n");

    sys::dump[[bool]](3u != 3u);
    sys::dump[[bool]](3u != 5u);

    std::print(std::err(), "\n");

    var x: ssize = +1s;
    var y: ssize = -1s;
    sys::dump[[bool]](x != y);
}
################################################################################
# 00
# 00
# 01
# 01
# 00
# 00
# 01
# 01
#
# 00
# 00
# 01
# 01
# 00
# 01
#
# 00
# 00
# 01
# 01
# 00
# 00
# 01
# 01
#
# 00
# 01
#
# 01
