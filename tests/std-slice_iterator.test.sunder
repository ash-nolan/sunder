import "std/core.sunder";

func print_elements(iter: std::iterator[[u32]]) void {
    for iter.advance() {
        std::print_format_line(
            std::out(),
            "{}",
            (:[]std::formatter)[
                std::formatter::init[[u32]](iter.current())]);
    }
}

func main() void {
    var slice_iterator = std::slice_iterator[[u32]]::init((:[]u32)[]);
    print_elements(std::iterator[[u32]]::init[[std::slice_iterator[[u32]]]](&slice_iterator));

    var slice_iterator = std::slice_iterator[[u32]]::init((:[]u32)[1, 2, 3]);
    print_elements(std::iterator[[u32]]::init[[std::slice_iterator[[u32]]]](&slice_iterator));

    dump slice_iterator.advance();
    dump slice_iterator.advance(); # Should be able to advance multiple times without panic.
    dump slice_iterator.current(); # Iterator was used up. This should panic.
}
################################################################################
# 1
# 2
# 3
# 00
# 00
# panic: invalid iterator
