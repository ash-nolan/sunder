import "std";

struct point {
    var x: u16;
    var y: u16;

    func init(x: u16, y: u16) point {
        return (:point){.x = x, .y = y};
    }
}

func main() void {
    var num = s32::square(12);
    dump num.is_even();

    var p = point::init(0xAAAA, 0xBBBB);
    dump p;
    p.zero();
    dump p;

    dump u32::MIN;
    dump u32::MAX;
    dump s32::MIN;
    dump s32::MAX;
}

extend s32 func square(value: s32) s32 {
    return value * value;
}

extend s32 func is_even(self: *s32) bool {
    return *self & 1 == 0;
}

extend point func zero(self: *point) void {
    *self = point::ZEROED;
}

extend point const ZEROED: point = (:point){.x = 0, .y = 0};
################################################################################
# 01
# AA AA BB BB
# 00 00 00 00
# 00 00 00 00
# FF FF FF FF
# 00 00 00 80
# FF FF FF 7F
