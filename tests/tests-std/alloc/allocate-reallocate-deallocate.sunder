import "std/alloc.sunder";

func main() void {
    # 2048 * sizeof(:u16) should allocate one page.
    var buf: *u16 = (:*u16)std::allocate(alignof(:u16), 2048 * sizeof(:u16));
    var slice: []u16 = (:[]u16){buf, 2048};

    # Make sure we can write to all the elements.
    for i in 0:countof(slice) {
        slice[i] = 0xBEEF;
    }

    # 4096 * sizeof(:u16) should allocate two pages.
    buf = (:*u16)std::reallocate(
        (:*byte)buf,
        alignof(:u16),
        2048 * sizeof(:u16),
        4096 * sizeof(:u16));
    slice = (:[]u16){buf, 4096};

    # Again make sure we can write to all the elements.
    for i in 0:countof(slice) {
        slice[i] = 0xF00D;
    }

    # Shrink the buffer down.
    buf = (:*u16)std::reallocate(
        (:*byte)buf,
        alignof(:u16),
        4096 * sizeof(:u16),
        1000 * sizeof(:u16));
    slice = (:[]u16){buf, 1000};

    # And yet again make sure we can write to all the elements.
    for i in 0:countof(slice) {
        slice[i] = 0xCAFE;
    }

    # Deallocate the buffer.
    std::deallocate((:*byte)buf, alignof(:u16), 1000);
}
