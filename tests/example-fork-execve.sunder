import "std";
import "sys";

func main() void {
    var sysret = sys::fork();
    if sysret < 0 {
        std::panic("fork failed");
    }

    var pid = (:sys::sint)sysret;
    if pid == 0 {
        var path = "/bin/echo\0";
        var args = (:[]*byte)[
            &"echo"[0],
            &"hello"[0],
            &"world"[0],
            (:*byte)0u
        ];
        var sysret = sys::execve(&path[0], &args[0], sys::envp);
        if sysret < 0 {
            std::panic("execve failed");
        }
    }

    var status: sys::sint = 0;
    var rusage: sys::rusage = std::zeroed[[sys::rusage]]();
    var sysret = sys::wait4(pid, &status, 0, &rusage);
    if sysret < 0 {
        std::panic("wait4 failed");
    }

    var exit_status = sys::WEXITSTATUS(status);
    std::print_format_line(
        std::out(),
        "child exit status: {}",
        (:[]std::formatter)[
            std::formatter::init[[sys::sint]](&exit_status)]);
}
################################################################################
# hello world
# child exit status: 0
