const nul: byte = '\0';
const ht: byte = '\t';
const nl: byte = '\n';
const squote: byte = '\'';
const dquote: byte = '\"';
const bslash: byte = '\\';

func print(ch: byte) void {
    var buf: [4u]byte = (:[4u]byte)['>', ch, '<', '\n'];
    const SYS_WRITE: ssize = 1s;
    const STDOUT_FILENO: ssize = 1s;
    syscall(SYS_WRITE, STDOUT_FILENO, &buf, 4u);
}

func main() void {
    # A NUL byte \0 embedded in this source file as part of the expected output
    # would create an invalid source encoding. Skip testing the NUL byte and
    # assume that the global `nul` constant produced the correct bytes literal.
    print(ht);
    print(nl);
    print(squote);
    print(dquote);
    print(bslash);
}
################################################################################
# >	<
# >
# <
# >'<
# >"<
# >\<
