import "std/core.sunder";

struct person {
    var name: []byte;

    func format(self: *person, writer: std::writer, fmt: []byte) std::result[[void, []byte]] {
        if countof(fmt) != 0 {
            std::formatter::panic_invalid_format_specifier(fmt);
        }
        return std::write_all(writer, self.*.name);
    }
}

func main() void {
    var alice: person = (:person){.name = "Alice"};
    var bob: person = (:person){.name = "Bob"};
    var _ = std::write_format(
        std::out(),
        "{} and {} and {}\n",
        (:[]std::formatter)[
            std::formatter::init[[person]](&alice),
            std::formatter::init[[person]](&bob)]);
}
################################################################################
# Alice and Bob and panic: invalid format argument count
