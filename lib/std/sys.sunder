namespace std::sys;
import "std/io.sunder";
import "sys/sys.sunder";

struct error {
    var code: ssize;

    func message(self: *std::sys::error) []byte {
        return ::sys::ERRNO_STRINGS[(:usize)self.*.code];
    }

    func format(
        self: *std::sys::error,
        writer: std::writer,
        fmt: []byte
    ) std::result[[:usize, :[]byte]] {
        if countof(fmt) != 0 {
            std::panic_invalid_format_specifier(fmt);
        }
        return std::write_all(writer, self.*.message());
    }
}

const EXIT_SUCCESS: ssize = 0;
const EXIT_FAILURE: ssize = 1;

func exit(status: ssize) void {
    ::sys::exit((:s32)status);
}
