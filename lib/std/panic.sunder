namespace std;
import "sys/sys.sunder";

# Discontinue program execution due to an irrecoverable error. This function
# currently operates by making a call to `sys::exit` with failure status, but
# this behavior may change in the future. This function does not return.
func terminate() void {
    sys::exit(1);
}

# ASCII string appearing before the message decribing a panic reason. Custom
# panic functions may be created by writing PANIC_PREAMBLE, a panic message, and
# an ASCII newline character to standard error followed by a call to
# `std::terminate`.
const PANIC_PREAMBLE: []byte = "panic: ";

# Print the string `why` to STDERR, followed by a newline, before making a call
# to `std::terminate`. This function does not return.
func panic(why: []byte) void {
    sys::write(sys::STDERR_FILENO, &PANIC_PREAMBLE[0], countof(PANIC_PREAMBLE));
    if countof(why) != 0 {
        sys::write(sys::STDERR_FILENO, &why[0], countof(why));
    }
    sys::write(sys::STDERR_FILENO, &"\n"[0], 1);
    std::terminate();
}
