namespace std::ascii;

func is_lowercase(char: byte) bool {
    return 'a' <= char and char <= 'z';
}

func to_lowercase(char: byte) byte {
    if std::ascii::is_uppercase(char) {
        return char | 0x20;
    }
    return char;
}

func is_uppercase(char: byte) bool {
    return 'A' <= char and char <= 'Z';
}

func to_uppercase(char: byte) byte {
    if std::ascii::is_lowercase(char) {
        return char & 0x5F;
    }
    return char;
}

func is_whitespace(char: byte) bool {
    return char == ' '
        or char == '\t'
        or char == '\n'
        or char == 0x0B  # vertical tab
        or char == 0x0C  # form feed
        or char == 0x0D; # carriage return
}

func view_trimmed(str: []byte) []byte {
    # Trim front.
    var start = 0u;
    for start < countof(str) and std::ascii::is_whitespace(str[start]) {
        start = start + 1;
    }

    # Trim back.
    var end = countof(str);
    for end != start and std::ascii::is_whitespace(str[end - 1]) {
        end = end - 1;
    }

    return str[start:end];
}
