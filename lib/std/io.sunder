namespace std;
import "sys/sys.sunder";

func print(bytes: []byte) void {
    if countof(bytes) == 0 {
        return;
    }
    sys::write(sys::STDOUT_FILENO, &bytes[0u], countof(bytes));
}

func println(bytes: []byte) void {
    print(bytes);
    print("\n");
}

func eprint(bytes: []byte) void {
    if countof(bytes) == 0 {
        return;
    }
    sys::write(sys::STDERR_FILENO, &bytes[0u], countof(bytes));
}

func eprintln(bytes: []byte) void {
    eprint(bytes);
    eprint("\n");
}

struct stream {
    var fd: ssize;

    const STDOUT_FD: ssize = (:ssize)sys::STDOUT_FILENO;
    const STDERR_FD: ssize = (:ssize)sys::STDERR_FILENO;

    func write(self: *stream, bytes: []byte) void {
        if countof(bytes) == 0 {
            return;
        }
        sys::write((:u32)(*self).fd, &bytes[0u], countof(bytes));
    }
}

const fd_stdout: stream = (:stream){.fd = stream::STDOUT_FD};
const fd_stderr: stream = (:stream){.fd = stream::STDERR_FD};
